#!/bin/bash
#SBATCH --job-name="Delly"
#SBATCH --time=24:00:00 
#SBATCH -n 1
#SBATCH -N 1
#SBATCH --cpus-per-task 8
#SBATCH --mail-user=${USER}@tgen.org

cd $DIR

module load python/3.6.0
module load BEDTools/2.26.0

export DIR_WORK=`pwd`
export REF_GENOME="/home/tgenref/homo_sapiens/grch37_hg19/hs37d5_tgen/genome_reference/hs37d5_plusRibo_plusOncoViruses_plusERCC.fa"
export FILE_REGION_TO_EXCLUDE="/home/tgenref/binaries/delly2/v20161111/human.GRCh37.contigs_to_exclude.MMRF-specific.tsv"
export FILE_WITH_FILTER_OPTIONS="/home/tgenref/binaries/delly2/v20161111/ini_files/svtop.delly.filter_options.ini"
export TUMOR_BAM=${TUMORSAMPLEG}.bwa.final.bam
export NORMAL_BAM=${NORMALSAMPLEG}.bwa.final.bam
export PROJECT=${PATIENT_NAME}
export DIR_SCRIPT_DELLY=/home/tgenref/binaries/delly2/v20161111
export ANNO_FILE=/home/tgenref/binaries/delly2/v20161111/annotations/MMRF.StructuralAnnotationDatabase.GRCh37.74_20161101.bed
export NCPUS=2
export SLOP=1000
export LIST_CONTIGS_TOBE_FILTERED_OUT="hs37d5:MT"
export DELLY_BINDIR=/home/tgenref/binaries/delly2/bin/0.7.6
export VCFTOOLS_BINDIR=/home/clegendre/tools/vcftools/vcftools_v0.1.14_20160810/bin
export VCF_CONCAT_EXE=/home/clegendre/tools/vcftools/vcftools_v0.1.14_20160810/bin/vcf-concat
export PERL5LIB=/home/clegendre/tools/vcftools/vcftools_v0.1.14_20160810/share/perl5:/home/clegendre/tools/vcftools/vcftools_v0.1.14_20160810/bin:${PERL5LIB}

# changed to version in personal directory as original binary has been deleted
export SNPSIFT_JAR_FP=/home/achristofferson/local/snpEff_4.2_2015-12-05/SnpSift.jar

# this might cause problems as it has been deleted going to comment out
# export PYTHON_ENV_ACTIVATE=/home/tgenref/pecan/delly2/python_venvs/delly2_pysam/bin/activate


export PYTHON_SCRIPT_DELLY_GENE_ANNO=/home/tgenref/binaries/delly2/v20161111/svtop.delly.sv_annotation.parallel.py
export PATH=/home/achristofferson/local/bcftools-1.6:/packages/BEDTools/2.26.0/bin:$PATH
export FILE_INI_ENV_VARS=${DIR_SCRIPT_DELLY}/ini_files/svtop.delly.definition_env_variables.ini

FAILED=0
email=`whoami`@tgen.org

### check variables and their values
export PATH=${DELLY_BINDIR}:${PATH}
#delly

###################################
## SOURCING FUNCTIONS FOR DELLY
###################################
source ${DIR_SCRIPT_DELLY}/svtop.delly.functions.sh

###########################
## INIT SOME VARIABLES
###########################
PREFIX_TBAM=$(echo -e ${TUMOR_BAM} | cut -d"." -f1 | cut -d"_" -f1-8 )
PREFIX_NBAM=$(echo -e ${NORMAL_BAM} | cut -d"." -f1 | cut -d"_" -f1-8 )
LJOBS=""
SUCCESS=0

#if [[ 1 == 0 ]] ; then

####################
## MAIN DELLY JOB ##
####################
## Running 5 delly threads, one thread per type of SV
for SVTYPE in INS DEL DUP INV TRA
do
        echo -e "starting ${SVTYPE}"
        echo -e "bash ${DIR_SCRIPT_DELLY}/svtop.delly.main.sh --ncpus ${NCPUS} --svtype ${SVTYPE} --tumor-bam ${TUMOR_BAM}  --normal-bam ${NORMAL_BAM}  --refgen ${REF_GENOME} --dir ${PWD}  -c ${FILE_WITH_FILTER_OPTIONS} -x ${FILE_REGION_TO_EXCLUDE}  1>log.delly.out.${SVTYPE}.${PREFIX_TBAM}.txt  2>log.delly.err.${SVTYPE}.${PREFIX_TBAM}.txt"

        ## Main Command to run Delly 
        bash ${DIR_SCRIPT_DELLY}/svtop.delly.main.sh --ncpus ${NCPUS} --svtype ${SVTYPE} --tumor-bam ${TUMOR_BAM}  --normal-bam ${NORMAL_BAM}  --refgen ${REF_GENOME} --dir ${PWD}  -c ${FILE_WITH_FILTER_OPTIONS} -x ${FILE_REGION_TO_EXCLUDE}  1>log.delly.out.${SVTYPE}.${PREFIX_TBAM}.txt  2>log.delly.err.${SVTYPE}.${PREFIX_TBAM}.txt  &
        LJOBS="$! ${LJOBS[@]}"
        echo -e "${LJOBS[@]}"

done
wait

###########################
## CLEANING JOBS PIDs
###########################

sleep 10
echo -e "Cleaning leftover JOBS ... just in case the wait command got overruled"
echo -e "${LJOBS[@]}" 

for J in ${LJOBS[@]} 
do  
	pkill -TERM -P ${J} &>/dev/null 
done

############################################
## CHECK IF WE HAVE the 5 Expected VCFs
############################################

echo -e "Checking if we generated 5 vcf files ... otherwise well, delly has failed somehow"

for SVTYPE in INS DEL DUP INV TRA
do
        VCF=${PREFIX_NBAM}-${PREFIX_TBAM}.SV_${SVTYPE}.flt.vcf
        if [[ -e ${VCF} ]] 
	then 
		if [[ $(stat -c%s ${VCF} ) -eq 0 ]] 
		then 
			SUCCESS=1 
		fi 
	else 
		SUCCESS=1 
	fi
done

if [[ ${SUCCESS} -ne 1 ]]  
then 
	echo -e "vcfs generated: 5 --> OK" 
else 
	FAILED=1 
	echo Failed vcf check 
fi

###########################
## CONCAT 5 DELLY VCFs
###########################

echo -e "concat calls ..."
echo -e "concatDellyVcfs ${PREFIX_TBAM} ${PREFIX_NBAM} $(find -maxdepth 1 -type f -name "*.flt.vcf" | sed 's/^\.\///' | tr '\n' ' ')"

concatDellyVcfs ${PREFIX_TBAM} ${PREFIX_NBAM} $(find -maxdepth 1 -type f -name "*.flt.vcf" | sed 's/^\.\///')

if [[ $? -ne 0 ]] 
then 
	FAILED=1
	echo Failed Delly concat step
fi

#####################################
## ANNOTATE CONCAT PASS ONLY VCF
#####################################

echo -e "add new TAGs to FORMAT to the vcf having delly passOnly calls ..."

ExpectedVCFname=${PREFIX_NBAM}-${PREFIX_TBAM}.delly.passOnly.vcf   
VCF=${ExpectedVCFname}

bash ${DIR_SCRIPT_DELLY}/svtop.delly.process_the_concatenated_vcfs.addRC_and_distribution.sh ${VCF} ${TUMOR_BAM} ${NORMAL_BAM} ${SLOP} "${LIST_CONTIGS_TOBE_FILTERED_OUT[@]}" ${ANNO_FILE}

if [[ $? -ne 0 ]]  
then 
	FAILED=1
	echo Failed Delly annotate concat step
fi


###########################
## CLEANING TEMP FILES
###########################

echo -e "move and clean files ..."
moveResDellyFiles 

if [[ $? -ne 0 ]] 
then 
	FAILED=1
	echo Failed Delly move files step
fi

# Rsync back to isilon if FAILED flag is 0 or set progress flags on isilon

fails=0

if [ ${FAILED} = 0 ]
then
	for extToCopy in SV_DEL.bcf SV_DUP.bcf SV_INS.bcf SV_INV.bcf SV_TRA.bcf 
        do
                ssh ${USER}@10.48.73.18 "rsync ${DIR_WORK}/bcfs/${GENOMEPAIR}.${extToCopy} ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/bcfs/ "

                if [ $? -ne 0 ]
                then
                	fails=1
                fi

		ssh ${USER}@10.48.73.18 "rsync ${DIR_WORK}/bcfs/${GENOMEPAIR}.${extToCopy}.csi ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/bcfs/ "
                
                if [ $? -ne 0 ]
                then 
                        fails=1
                fi
        done

	ssh ${USER}@10.48.73.18 "rsync ${DIR_WORK}/bcfs/logs.zip ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/bcfs/ "

        if [ $? -ne 0 ]
        then
        	fails=1
        fi

	ssh ${USER}@10.48.73.18 "rsync ${DIR_WORK}/${GENOMEPAIR}.delly.allCalls.vcf ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/ "

	if [ $? -ne 0 ]
        then
                fails=1
        fi

	ssh ${USER}@10.48.73.18 "rsync ${DIR_WORK}/${GENOMEPAIR}.delly.passOnly.vcf ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/ "
        
        if [ $? -ne 0 ]
        then
                fails=1
        fi

	ssh ${USER}@10.48.73.18 "rsync ${DIR_WORK}/${GENOMEPAIR}.delly.passOnly.flt.anno.final.vcf ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/ "

        if [ $? -ne 0 ]
        then
                fails=1
        fi
else
	ssh ${USER}@10.48.73.18 "rm ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/Delly_In_Progress ; \
                rm ${STARTDIR}/${PATIENT_NAME}/Delly_In_Progress ; \
                touch ${STARTDIR}/${PATIENT_NAME}/Delly_Fail ; \
                echo Delly pbs script failed for ${GENOMEPAIR} >> ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/Delly_Fail ; \
                echo Delly pbs script failed for ${GENOMEPAIR} | mailx -s "Post_Medusa_Processing_Failed" ${USER}@tgen.org "
        exit 1
fi

# Set progress flags based on fails flag from rsync step

if [ $fails -eq 0 ] && [ ${FAILED} = 0 ]
then
	ssh ${USER}@10.48.73.18 "rm ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/Delly_In_Progress ; \
                touch ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/Delly_Complete ; \
                COMPLETE=0 ; \
                for XPAIR in \`echo ${EXPECTEDPAIRS} | sed 's/@/\n/g'\` 
                do 
                        if [ ! -f ${STARTDIR}/${PATIENT_NAME}/delly/\${XPAIR}/Delly_Complete ]
                        then
                                COMPLETE=1
                        fi
                done ; \
                if [ \${COMPLETE} = 0 ]
                then
                        rm ${STARTDIR}/${PATIENT_NAME}/Delly_In_Progress
                        touch ${STARTDIR}/${PATIENT_NAME}/Delly_Complete
                fi "

else
	if [ $fails -ne 0 ] && [ ${FAILED} = 0 ]
        then

                ssh ${USER}@10.48.73.18 "rm ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/Delly_In_Progress ; \
                        echo Delly pbs script failed to rsync back to isilon for ${GENOMEPAIR} >> ${STARTDIR}/${PATIENT_NAME}/delly/${GENOMEPAIR}/Delly_Fail ; \
                        echo Delly pbs script failed to rsync back to isilon for ${GENOMEPAIR} | mailx -s "Post_Medusa_Processing_Failed" ${USER}@tgen.org "

        fi
fi


